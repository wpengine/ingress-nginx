apiVersion: v1
kind: Namespace
metadata:
  name: example
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 1
  name: example-deployment
  namespace: example
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: internal-service
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: internal-service
    spec:
      containers:
      - image: nginx:latest
        imagePullPolicy: Always
        name: pod1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "echo 'pod1' > /usr/share/nginx/html/index.html"]
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: external-service
  namespace: example
spec:
  externalName: www.example.com
  type: ExternalName
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: internal-service
  namespace: example
spec:
  ports:
  - name: 80-80
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: internal-service
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress1
  namespace: example
spec:
  ingressClassName: nginx
  rules:
  - host: www.example.com
    http:
      paths:
      - backend:
          service:
            name: external-service
            port:
              number: 80
        path: /
        pathType: Prefix
